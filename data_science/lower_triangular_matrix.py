"""
==========================
lower_triangular_matrix.py
==========================

PT-BR:
Preenche a porcao inferior de uma matriz triangular superior, criando uma matriz simetrica.
Antes de executar esse script, deve-se editar manualmente o arquivo distmat genrado pelo EMBOSS distmat, removendo as linhas inciais (8 linhas) e coluna inicial e final que ficam em branco. Nomear a coluna com os IDs das sequncias (ultima coluna) com o header 'labels'.

EN:
Fills the lower portion of an upper triangular matrix, creating a symmetrical matrix.
Before executing this script, you must manually edit the distmat file generated by EMBOSS distmat: remove the starting lines (8 lines) and the starting and ending columns that are blank. Name the column with the sequence IDs (last column) with the header 'labels'.

usage: python3 lower_triangular_matrix.py <distance matrix EMBOSS>

"""

def lower_tringular(matrix):
	import numpy as np
	import pandas as pd

	#suppress exponential notation, define an appropriate float formatter. I had to do this because numpy was converting the float numbers to scientific notation
	np.set_printoptions(suppress=True, formatter={'float_kind':'{:5.3f}'.format})

	# carrega dos dados
	matriz = pd.DataFrame(matrix)
	# cria o vetor de labels (IDs das sequencias). Essa coluna ja estava com o nome 'labels' (fiz isso manualmente no arquivo de saida do distmat)
	matriz = matriz.replace(0,1)
	
	labels = matriz['labels']
	# remover a coluna de labels. Nao pode estar na matriz (so pode ter os dados numericos)
	matriz = matriz.drop(labels=['labels'], axis=1)
	# preenche a matriz trinagular inferior com zeros.
	matriz = np.triu(matriz)
	# substitui a matriz triangular inferior com a matriz tringular superior.
	matriz = matriz + matriz.T - np.diag(np.diag(matriz))

	return matriz, labels

if __name__ == '__main__':

	import numpy as np
	import pandas as pd
	import sys

	dados = pd.read_csv(sys.argv[1], sep=',')
	matriz, labels = lower_tringular(dados)

	# gerar arquivos de saida para usar no R (construir MDS no R)
	exportar_matriz = pd.DataFrame(matriz)
	exportar_matriz.to_csv('matriz_distmat2mds.csv')
	exportar_vator_labels = pd.DataFrame(labels)
	exportar_vator_labels.to_csv('labels_distmat2mds.csv')
